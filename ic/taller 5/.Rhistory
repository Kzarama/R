summary(best.model.bwd)
jtest(best.model.fwd, best.model.bwd)
coxtest(best.model.fwd, best.model.bwd)
remove_not_significant <- function(modelo, p){
all_vars <- all.vars(formula(modelo))[-1]
dep_var <- all.vars(formula(modelo))[1]
summ <- summary(modelo)
pvals <- summ[[4]][,4]
not_signif <- character()
not_signif <- names(which(pvals > p))
while(length(not_signif) > 0){
all_vars <- all_vars[!all_vars %in% not_signif[1]]
myForm <- as.formula(paste(paste(dep_var, " ~"), paste(all_vars, collapse=" + "), sep=""))
modelo <- lm(myForm, data)
summ <- summary(modelo)
pvals <- summ[[4]][, 4]
not_signif <- character()
not_signif <- names(which(pvals > p))
not_signif <- not_signif[!not_signif %in% "(Intercep)"]
}
modelo.limpio <- modelo
return(modelo.limpio)
}
best.model.fwd.clean <- remove_not_significant(best.model.fwd, 0.01)
summary(best.model.fwd.clean)
jtest(best.model.fwd.clean, best.model.bwd)
coxtest(best.model.fwd.clean, best.model.bwd)
summary(best.model.fwd.clean)$adj.r.square
summary(best.model.bwd)$adj.r.squared
AIC(best.model.fwd.clean, best.model.bwd)
BIC(best.model.fwd.clean, best.model.bwd)
names(coef(best.model.bwd))[-1]
View(best.model.bwd)
View(best.model.fwd)
knitr::opts_chunk$set(echo = TRUE)
library(AER);
library(leaps)
data <- na.omit(read.csv("DatosTaller4.csv", row.names=1))
head(data)
dim(data)
max.model <- lm(ViolentCrimesPerPop ~ ., data)
summary(max.model)
min.model <- lm(ViolentCrimesPerPop ~ 1, data)
summary(min.model)
max.model.formula <- formula(max.model)
fwd.model <- regsubsets(x=max.model.formula, y=ViolentCrimesPerPop, data=data, nvmax=100000, method="forward")
plot(fwd.model, scale="bic", main="Criterio del BIC")
best.fwd.model <- summary(fwd.model)
best.fwd.model.bic <- which.min(best.fwd.model$bic)
vars.fwd.model <- names(coef(fwd.model, best.fwd.model.bic))
formula.best.fwd <- as.formula(paste("ViolentCrimesPerPop ~ 1 +", paste(vars.fwd.model[2:length(vars.fwd.model)], collapse=" + "), sep=""))
best.model.fwd <- lm(formula.best.fwd, data)
summary(best.model.fwd)
bwd.model <- regsubsets(x=formula(max.model), y=ViolentCrimesPerPop, data=data, nvmax=100000, method="backward")
plot(bwd.model, scale="bic", main="Criterio del BIC")
best.bwd.model <- summary(bwd.model)
best.bwd.model.bic <- which.min(best.bwd.model$bic)
vars.bwd.model <- names(coef(bwd.model, best.bwd.model.bic))
vars.bwd.model[-1]
formula.best.bwd <- as.formula(paste("ViolentCrimesPerPop ~ 1 +", paste(vars.bwd.model[2:length(vars.bwd.model)], collapse=" + "), sep=""))
best.model.bwd <- lm(formula.best.bwd, data)
summary(best.model.bwd)
jtest(best.model.fwd, best.model.bwd)
coxtest(best.model.fwd, best.model.bwd)
remove_not_significant <- function(modelo, p){
all_vars <- all.vars(formula(modelo))[-1]
dep_var <- all.vars(formula(modelo))[1]
summ <- summary(modelo)
pvals <- summ[[4]][,4]
not_signif <- character()
not_signif <- names(which(pvals > p))
while(length(not_signif) > 0){
all_vars <- all_vars[!all_vars %in% not_signif[1]]
myForm <- as.formula(paste(paste(dep_var, " ~"), paste(all_vars, collapse=" + "), sep=""))
modelo <- lm(myForm, data)
summ <- summary(modelo)
pvals <- summ[[4]][, 4]
not_signif <- character()
not_signif <- names(which(pvals > p))
not_signif <- not_signif[!not_signif %in% "(Intercep)"]
}
modelo.limpio <- modelo
return(modelo.limpio)
}
best.model.fwd.clean <- remove_not_significant(best.model.fwd, 0.01)
summary(best.model.fwd.clean)
jtest(best.model.fwd.clean, best.model.bwd)
coxtest(best.model.fwd.clean, best.model.bwd)
summary(best.model.fwd.clean)$adj.r.square
summary(best.model.bwd)$adj.r.squared
AIC(best.model.fwd.clean, best.model.bwd)
BIC(best.model.fwd.clean, best.model.bwd)
names(coef(best.model.bwd))[-1]
setwd("~/git/R/ic/taller 5")
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("DatosTaller4.csv", row.name=1)
modelo1 <- lm(ViolentCrimesPerPop ~ 1 + racepctblack + pctUrban + PctPopUnderPov +
MalePctDivorce + PctKids2Par + PctWorkMom + PctIlleg + PctPersDenseHous +
HousVacant + PctHousOccup + RentLowQ + MedRent + MedOwnCostPctIncNoMtg +
NumStreet, data)
summary(modelo1)
modelo1 <- lm(ViolentCrimesPerPop ~ racepctblack + pctUrban + PctPopUnderPov + MalePctDivorce + PctKids2Par + PctWorkMom + PctIlleg + PctPersDenseHous + HousVacant + PctHousOccup + RentLowQ + MedRent + MedOwnCostPctIncNoMtg +   NumStreet, data)
summary(modelo1)
summary(modelo1)
install.packages("car")
install.packages("car")
library(car)
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("DatosTaller4.csv", row.name=1)
modelo1 <- lm(ViolentCrimesPerPop ~ racepctblack + pctUrban + PctPopUnderPov + MalePctDivorce + PctKids2Par + PctWorkMom + PctIlleg + PctPersDenseHous + HousVacant + PctHousOccup + RentLowQ + MedRent + MedOwnCostPctIncNoMtg +   NumStreet, data)
summary(modelo1)
vif(modelo1)
```{r setup, include=FALSE}
XTX <- model.matrix(modelo)
XTX <- model.matrix(modelo1)
e <- eigen(t(XTX) %*% XTX)
e%val
XTX <- model.matrix(modelo1)
e <- eigen(t(XTX) %*% XTX)
e%val
e$val
lambda.1 <- max(e$val)
lambda.k <- min(e$val)
kappa <- sqrt(lambda.1/lambda.k)
kappa
remueve.VIF.grande <- function(modelo, u){
data <- modelo$model
all_vifs <- car:: vif(modelo)
names_all <- names(all_vifs)
dep_var <- all.vars(formula(modelo))[1]
while(any(all_vifs > u)){
var_max_vif <- names(which(all_vifs == max(all_vifs)))
names_all <- names_all[!(names_all) %in% var_max_vif]
myForm <- as.formula(paste(paste(dep_var, " ~ "), paste(names_all, collapse=" + "), sep=""))
modelo.prueba <- lm(myForm, data)
all_vifs <- car::vif(modelo.prueba)
}
modelo.limpio <- modelo.prueba
return(modelo.limpio)
}
modelo2 <- remueve.VIF.grande(modelo1, 4)
summary(modelo2)
XTX <- model.matrix(modelo2)
e <- eigen(t(XTX) %*% XTX)
e$val
lambda.1 <- max(e$val)
lambda.k <- min(e$val)
kappa <- sqrt(lambda.1/lambda.k)
kapa
kappa
vif(modelo2)
remove_not_significant <- function(modelo, p){
all_vars <- all.vars(formula(modelo))[-1]
dep_var <- all.vars(formula(modelo))[1]
summ <- summary(modelo)
pvals <- summ[[4]][,4]
not_signif <- character()
not_signif <- names(which(pvals > p))
while(length(not_signif) > 0){
all_vars <- all_vars[!all_vars %in% not_signif[1]]
myForm <- as.formula(paste(paste(dep_var, " ~"), paste(all_vars, collapse=" + "), sep=""))
modelo <- lm(myForm, data)
summ <- summary(modelo)
pvals <- summ[[4]][, 4]
not_signif <- character()
not_signif <- names(which(pvals > p))
not_signif <- not_signif[!not_signif %in% "(Intercep)"]
}
modelo.limpio <- modelo
return(modelo.limpio)
}
modelo3 <- remove_not_significant(modelo2, 0.01)
modelo3 <- remove_not_significant(modelo2, 0.01)
modelo3 <- remove_not_significant(modelo2, 0.1)
remove_not_significant <- function(modelo, p){
all_vars <- all.vars(formula(modelo))[-1]
dep_var <- all.vars(formula(modelo))[1]
summ <- summary(modelo)
pvals <- summ[[4]][,4]
not_signif <- character()
not_signif <- names(which(pvals > p))
while(length(not_signif) > 0){
all_vars <- all_vars[!all_vars %in% not_signif[1]]
myForm <- as.formula(paste(paste(dep_var, " ~"), paste(all_vars, collapse=" + "), sep=""))
modelo <- lm(myForm, data)
summ <- summary(modelo)
pvals <- summ[[4]][, 4]
not_signif <- character()
not_signif <- names(which(pvals > p))
not_signif <- not_signif[!not_signif %in% "(Intercep)"]
}
modelo.limpio <- modelo
return(modelo.limpio)
}
modelo3 <- remove_not_significant(modelo2, 0.1)
modelo3 <- remove_not_significant(modelo2, 0.1)
modelo3 <- remove_not_significant(modelo2, 0.1)
modelo3 <- remove_not_significant(modelo2, 0.1)
knitr::opts_chunk$set(echo = TRUE)
library(car)
data <- read.csv("DatosTaller4.csv", row.name=1)
modelo1 <- lm(ViolentCrimesPerPop ~ racepctblack + pctUrban + PctPopUnderPov + MalePctDivorce + PctKids2Par + PctWorkMom + PctIlleg + PctPersDenseHous + HousVacant + PctHousOccup + RentLowQ + MedRent + MedOwnCostPctIncNoMtg +   NumStreet, data)
summary(modelo1)
vif(modelo1)
XTX <- model.matrix(modelo1)
e <- eigen(t(XTX) %*% XTX)
e$val
lambda.1 <- max(e$val)
lambda.k <- min(e$val)
kappa <- sqrt(lambda.1/lambda.k)
kappa
remueve.VIF.grande <- function(modelo, u){
data <- modelo$model
all_vifs <- car:: vif(modelo)
names_all <- names(all_vifs)
dep_var <- all.vars(formula(modelo))[1]
while(any(all_vifs > u)){
var_max_vif <- names(which(all_vifs == max(all_vifs)))
names_all <- names_all[!(names_all) %in% var_max_vif]
myForm <- as.formula(paste(paste(dep_var, " ~ "), paste(names_all, collapse=" + "), sep=""))
modelo.prueba <- lm(myForm, data)
all_vifs <- car::vif(modelo.prueba)
}
modelo.limpio <- modelo.prueba
return(modelo.limpio)
}
modelo2 <- remueve.VIF.grande(modelo1, 4)
summary(modelo2)
XTX <- model.matrix(modelo2)
e <- eigen(t(XTX) %*% XTX)
e$val
lambda.1 <- max(e$val)
lambda.k <- min(e$val)
kappa <- sqrt(lambda.1/lambda.k)
kappa
vif(modelo2)
remove_not_significant <- function(modelo, p){
all_vars <- all.vars(formula(modelo))[-1]
dep_var <- all.vars(formula(modelo))[1]
summ <- summary(modelo)
pvals <- summ[[4]][,4]
not_signif <- character()
not_signif <- names(which(pvals > p))
while(length(not_signif) > 0){
all_vars <- all_vars[!all_vars %in% not_signif[1]]
myForm <- as.formula(paste(paste(dep_var, " ~"), paste(all_vars, collapse=" + "), sep=""))
modelo <- lm(myForm, data)
summ <- summary(modelo)
pvals <- summ[[4]][, 4]
not_signif <- character()
not_signif <- names(which(pvals > p))
not_signif <- not_signif[!not_signif %in% "(Intercep)"]
}
modelo.limpio <- modelo
return(modelo.limpio)
}
modelo3 <- remove_not_significant(modelo2, 0.1)
summ <- summary(modelo)
remove_not_significant <- function(modelo, p){
all_vars <- all.vars(formula(modelo))[-1]
dep_var <- all.vars(formula(modelo))[1]
summ <- summary(modelo)
pvals <- summ[[4]][,4]
not_signif <- character()
not_signif <- names(which(pvals > p))
while(length(not_signif) > 0){
all_vars <- all_vars[!all_vars %in% not_signif[1]]
myForm <- as.formula(paste(paste(dep_var, " ~"), paste(all_vars, collapse=" + "), sep=""))
modelo <- lm(myForm, data)
summ <- summary(modelo)
pvals <- summ[[4]][, 4]
not_signif <- character()
not_signif <- names(which(pvals > p))
not_signif <- not_signif[!not_signif %in% "(Intercep)"]
}
modelo.limpio <- modelo
return(modelo.limpio)
}
modelo3 <- remove_not_significant(modelo2, 0.1)
remueve.no.significa <- function(modelo, p){
# extrae el dataframe
data <- modelo$model
# extraer el nombre de todas las variables X
all_vars <- all.vars(formula(modelo))[-1]
# extraer el nombre de la variables y
dep_var <- all.vars(formula(modelo))[1]
# Extraer las variables no significativas
# resumen del modelo
summ <- summary(modelo)
# extrae los valores p
pvals <- summ[[4]][, 4]
# creando objeto para guardar las variables no significativas
not_signif <- character()
not_signif<- names(which(pvals > p))
# Si hay alguna variable no-significativa
while(length(not_signif) > 0){
all_vars <- all_vars[!all_vars %in% not_signif[1]]
# nueva formula
myForm <- as.formula(paste(paste(dep_var, "~ "),
paste (all_vars, collapse=" + "), sep=""))
# re-escribe la formula
modelo <- lm(myForm, data= data)
# Extrae variables no significativas.
summ <- summary(modelo)
pvals <- summ[[4]][, 4]
not_signif <- character()
not_signif <- names(which(pvals > p))
not_signif <- not_signif[!not_signif %in% "(Intercept)"]
}
modelo.limpio <- modelo
return(modelo.limpio)
}
model.nuevo <- remueve.no.significa(model.limpio, 0.1)
model.nuevo <- remueve.no.significa(model2, 0.1)
model.nuevo <- remueve.no.significa(modelo2, 0.1)
summary(model.nuevo)
remove_not_significant <- function(modelo, p){
all_vars <- all.vars(formula(modelo))[-1]
dep_var <- all.vars(formula(modelo))[1]
summ <- summary(modelo)
pvals <- summ[[4]][,4]
not_signif <- character()
not_signif <- names(which(pvals > p))
while(length(not_signif) > 0){
all_vars <- all_vars[!all_vars %in% not_signif[1]]
myForm <- as.formula(paste(paste(dep_var, " ~"), paste(all_vars, collapse=" + "), sep=""))
modelo <- lm(myForm, modelo)
summ <- summary(modelo)
pvals <- summ[[4]][, 4]
not_signif <- character()
not_signif <- names(which(pvals > p))
not_signif <- not_signif[!not_signif %in% "(Intercep)"]
}
modelo.limpio <- modelo
return(modelo.limpio)
}
modelo3 <- remove_not_significant(modelo2, 0.1)
remove_not_significant <- function(modelo, p){
modelo <- modelo$model
all_vars <- all.vars(formula(modelo))[-1]
dep_var <- all.vars(formula(modelo))[1]
summ <- summary(modelo)
pvals <- summ[[4]][,4]
not_signif <- character()
not_signif <- names(which(pvals > p))
while(length(not_signif) > 0){
all_vars <- all_vars[!all_vars %in% not_signif[1]]
myForm <- as.formula(paste(paste(dep_var, " ~"), paste(all_vars, collapse=" + "), sep=""))
modelo <- lm(myForm, modelo)
summ <- summary(modelo)
pvals <- summ[[4]][, 4]
not_signif <- character()
not_signif <- names(which(pvals > p))
not_signif <- not_signif[!not_signif %in% "(Intercep)"]
}
modelo.limpio <- modelo
return(modelo.limpio)
}
modelo3 <- remove_not_significant(modelo2, 0.1)
remove_not_significant <- function(modelo, p){
modelo <- modelo$model
all_vars <- all.vars(formula(modelo))[-1]
dep_var <- all.vars(formula(modelo))[1]
summ <- summary(modelo)
pvals <- summ[[4]][,4]
not_signif <- character()
not_signif <- names(which(pvals > p))
while(length(not_signif) > 0){
all_vars <- all_vars[!all_vars %in% not_signif[1]]
myForm <- as.formula(paste(paste(dep_var, " ~"), paste(all_vars, collapse=" + "), sep=""))
modelo <- lm(myForm, modelo)
summ <- summary(modelo)
pvals <- summ[[4]][, 4]
not_signif <- character()
not_signif <- names(which(pvals > p))
not_signif <- not_signif[!not_signif %in% "(Intercep)"]
}
modelo.limpio <- modelo
return(modelo.limpio)
}
modelo3 <- remove_not_significant(modelo2, 0.1)
remove_not_significant <- function(modelo, p){
data <- modelo$model
all_vars <- all.vars(formula(modelo))[-1]
dep_var <- all.vars(formula(modelo))[1]
summ <- summary(modelo)
pvals <- summ[[4]][,4]
not_signif <- character()
not_signif <- names(which(pvals > p))
while(length(not_signif) > 0){
all_vars <- all_vars[!all_vars %in% not_signif[1]]
myForm <- as.formula(paste(paste(dep_var, " ~"), paste(all_vars, collapse=" + "), sep=""))
modelo <- lm(myForm, data)
summ <- summary(modelo)
pvals <- summ[[4]][, 4]
not_signif <- character()
not_signif <- names(which(pvals > p))
not_signif <- not_signif[!not_signif %in% "(Intercep)"]
}
modelo.limpio <- modelo
return(modelo.limpio)
}
modelo3 <- remove_not_significant(modelo2, 0.1)
remueve.no.significa <- function(modelo, p){
data <- modelo$model
all_vars <- all.vars(formula(modelo))[-1]
dep_var <- all.vars(formula(modelo))[1]
summ <- summary(modelo)
pvals <- summ[[4]][, 4]
not_signif <- character()
not_signif<- names(which(pvals > p))
while(length(not_signif) > 0){
all_vars <- all_vars[!all_vars %in% not_signif[1]]
myForm <- as.formula(paste(paste(dep_var, "~ "), paste (all_vars, collapse=" + "), sep=""))
modelo <- lm(myForm, data= data)
summ <- summary(modelo)
pvals <- summ[[4]][, 4]
not_signif <- character()
not_signif <- names(which(pvals > p))
not_signif <- not_signif[!not_signif %in% "(Intercept)"]
}
modelo.limpio <- modelo
return(modelo.limpio)
}
model.nuevo <- remueve.no.significa(model.limpio, 0.1)
model.nuevo <- remueve.no.significa(modelo2, 0.1)
summary(model.nuevo)
remove_not_significant <- function(modelo, p){
data <- modelo$model
all_vars <- all.vars(formula(modelo))[-1]
dep_var <- all.vars(formula(modelo))[1]
summ <- summary(modelo)
pvals <- summ[[4]][, 4]
not_signif <- character()
not_signif <- names(which(pvals > p))
while(length(not_signif) > 0){
all_vars <- all_vars[!all_vars %in% not_signif[1]]
myForm <- as.formula(paste(paste(dep_var, " ~ "), paste(all_vars, collapse=" + "), sep=""))
modelo <- lm(myForm, data)
summ <- summary(modelo)
pvals <- summ[[4]][, 4]
not_signif <- character()
not_signif <- names(which(pvals > p))
not_signif <- not_signif[!not_signif %in% "(Intercept)"]
}
modelo.limpio <- modelo
return(modelo.limpio)
}
modelo3 <- remove_not_significant(modelo2, 0.1)
summary(modelo3)
knitr::opts_chunk$set(echo = TRUE)
library(AER);
library(leaps)
data <- na.omit(read.csv("DatosTaller4.csv", row.names=1))
head(data)
dim(data)
max.model <- lm(ViolentCrimesPerPop ~ ., data)
summary(max.model)
min.model <- lm(ViolentCrimesPerPop ~ 1, data)
summary(min.model)
max.model.formula <- formula(max.model)
fwd.model <- regsubsets(x=max.model.formula, y=ViolentCrimesPerPop, data=data, nvmax=100000, method="forward")
plot(fwd.model, scale="bic", main="Criterio del BIC")
best.fwd.model <- summary(fwd.model)
best.fwd.model.bic <- which.min(best.fwd.model$bic)
vars.fwd.model <- names(coef(fwd.model, best.fwd.model.bic))
formula.best.fwd <- as.formula(paste("ViolentCrimesPerPop ~ 1 +", paste(vars.fwd.model[2:length(vars.fwd.model)], collapse=" + "), sep=""))
best.model.fwd <- lm(formula.best.fwd, data)
summary(best.model.fwd)
bwd.model <- regsubsets(x=formula(max.model), y=ViolentCrimesPerPop, data=data, nvmax=100000, method="backward")
plot(bwd.model, scale="bic", main="Criterio del BIC")
best.bwd.model <- summary(bwd.model)
best.bwd.model.bic <- which.min(best.bwd.model$bic)
vars.bwd.model <- names(coef(bwd.model, best.bwd.model.bic))
vars.bwd.model[-1]
formula.best.bwd <- as.formula(paste("ViolentCrimesPerPop ~ 1 +", paste(vars.bwd.model[2:length(vars.bwd.model)], collapse=" + "), sep=""))
best.model.bwd <- lm(formula.best.bwd, data)
summary(best.model.bwd)
jtest(best.model.fwd, best.model.bwd)
coxtest(best.model.fwd, best.model.bwd)
remove_not_significant <- function(modelo, p){
all_vars <- all.vars(formula(modelo))[-1]
dep_var <- all.vars(formula(modelo))[1]
summ <- summary(modelo)
pvals <- summ[[4]][,4]
not_signif <- character()
not_signif <- names(which(pvals > p))
while(length(not_signif) > 0){
all_vars <- all_vars[!all_vars %in% not_signif[1]]
myForm <- as.formula(paste(paste(dep_var, " ~"), paste(all_vars, collapse=" + "), sep=""))
modelo <- lm(myForm, data)
summ <- summary(modelo)
pvals <- summ[[4]][, 4]
not_signif <- character()
not_signif <- names(which(pvals > p))
not_signif <- not_signif[!not_signif %in% "(Intercept)"]
}
modelo.limpio <- modelo
return(modelo.limpio)
}
best.model.fwd.clean <- remove_not_significant(best.model.fwd, 0.01)
summary(best.model.fwd.clean)
jtest(best.model.fwd.clean, best.model.bwd)
coxtest(best.model.fwd.clean, best.model.bwd)
summary(best.model.fwd.clean)$adj.r.square
summary(best.model.bwd)$adj.r.squared
AIC(best.model.fwd.clean, best.model.bwd)
BIC(best.model.fwd.clean, best.model.bwd)
names(coef(best.model.bwd))[-1]
vif(modelo3)
names(coef(modelo3))
names(coef(modelo3))[-1]
