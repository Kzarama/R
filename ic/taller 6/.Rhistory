q()
library(ggplot2)
library(directlabels)
library(ggthemes)
library(scales)
library(gridExtra)
library(stats)
library(readxl)
library(reshape2)
library(dplyr)
library(BSDA)
library(e1071)
descriptivas<- function(x){data.frame("MEDIDA"=c("Observaciones", "Mínimo", "1er Q", "Media", "Mediana", "Desv Est", "3er Q", "Máximo", "Asimetría", "Curtosis", "atípico leve<", "atípico leve>","atípico extremo<","atípico extremo>", "Err Est Media", "IC(95%) Media Up", "IC(95%) Media Down"),"VALOR"=format(c(length(na.omit(x)), min(na.omit(x)), quantile(na.omit(x), prob=0.25), mean(na.omit(x)), median(na.omit(x)), sd(na.omit(x)), quantile(na.omit(x), prob=0.75), max(na.omit(x)), skewness(na.omit(x)), kurtosis(na.omit(x)), (2.5*quantile(na.omit(x),prob=0.25)-1.5*quantile(na.omit(x), prob=0.75)),(2.5*quantile(na.omit(x),prob=0.75)-1.5*quantile(na.omit(x), prob=0.25)),(4*quantile(na.omit(x),prob=0.25)-3*quantile(na.omit(x), prob=0.75)),(4*quantile(na.omit(x),prob=0.75)-3*quantile(na.omit(x), prob=0.25)), ((sd(na.omit(x))/sqrt(length(na.omit(x))))), (mean(na.omit(x))+1.96*(sd(na.omit(x))/sqrt(length(na.omit(x))))), (mean(na.omit(x))-1.96*((sd(na.omit(x))/sqrt(length(na.omit(x))))))), scientific = F))}
descriptivas2<-function(Continua,Categorías){
x1=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){length(na.omit(x))})
names(x1)=c("Categoría","Obs")
x2=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){min(na.omit(x))})
names(x2)=c("Categoría","Mínimo")
x3=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){quantile(na.omit(x), prob =0.25)})
names(x3)=c("Categoría","1er Q")
x4=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){median(na.omit(x))})
names(x4)=c("Categoría","Mediana")
x5=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){mean(na.omit(x))})
names(x5)=c("Categoría","Media")
x6=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){quantile(na.omit(x), prob =0.75)})
names(x6)=c("Categoría","3er Q")
x7=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){max(na.omit(x))})
names(x7)=c("Categoría","Máximo")
x8=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){sd(na.omit(x))})
names(x8)=c("Categoría","Desv Est")
x9=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){skewness(na.omit(x))})
names(x9)=c("Categoría","Asimetría")
x10=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){kurtosis(na.omit(x))})
names(x10)=c("Categoría","Curtosis")
cbind(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10)[,-seq(3,19,2)]
}
tabla_freq<- function(x,total=1,na="ifany"){
if (total==1) {
M=data.frame("Categoría"=table(x, useNA = na), "Rel"=prop.table(table(x,useNA = na)))[,-3]
names(M)=c("Categoría","Freq. Abs.","Freq. Rel.")
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",sum(M$`Freq. Abs.`),sum(M$`Freq. Rel.`))
M$`Freq. Rel.`=as.numeric(M$`Freq. Rel.`)
M$`Freq. Abs.`=as.numeric(M$`Freq. Abs.`)
M
} else{
M=data.frame("Categoría"=table(x, useNA = na), "Rel"=prop.table(table(x,useNA = na)))[,-3]
names(M)=c("Categoría","Freq. Abs.","Freq. Rel.")
M
}
}
tabla_freq2<-function(x,y,na="ifany",prop=0, suma=c("filas","col")){
if (prop==0) {
M=as.data.frame.matrix(table(x, y, useNA = na))
M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
M
} else if (prop==1 & suma=="filas") {
M=as.data.frame.matrix(table(x, y, useNA = na))
M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
for (i in 2:ncol(M)) {
M[,i]=M[,i]/M[,ncol(M)]
}
M
} else {
M=as.data.frame.matrix(table(x, y, useNA = na))
M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
for (i in 1:nrow(M)) {
M[i,2:ncol(M)]=M[i,2:ncol(M)]/M[nrow(M),2:ncol(M)]
}
M
}
}
install.packages("directlabels")
library(directlabels)
install.packages("ggthemes")
insertClassMethods("ggthemes")
library(ggthemes)
install.packages("gridExtra")
library(gridExtra)
install.packages("readxl")
library(readxl)
insertClassMethods("reshape2")
install.packages("reshape2")
library(reshape2)
library(ggplot2)
library(directlabels)
library(ggthemes)
library(scales)
library(gridExtra)
library(stats)
library(readxl)
library(reshape2)
library(dplyr)
library(BSDA)
library(e1071)
descriptivas<- function(x){data.frame("MEDIDA"=c("Observaciones", "Mínimo", "1er Q", "Media", "Mediana", "Desv Est", "3er Q", "Máximo", "Asimetría", "Curtosis", "atípico leve<", "atípico leve>","atípico extremo<","atípico extremo>", "Err Est Media", "IC(95%) Media Up", "IC(95%) Media Down"),"VALOR"=format(c(length(na.omit(x)), min(na.omit(x)), quantile(na.omit(x), prob=0.25), mean(na.omit(x)), median(na.omit(x)), sd(na.omit(x)), quantile(na.omit(x), prob=0.75), max(na.omit(x)), skewness(na.omit(x)), kurtosis(na.omit(x)), (2.5*quantile(na.omit(x),prob=0.25)-1.5*quantile(na.omit(x), prob=0.75)),(2.5*quantile(na.omit(x),prob=0.75)-1.5*quantile(na.omit(x), prob=0.25)),(4*quantile(na.omit(x),prob=0.25)-3*quantile(na.omit(x), prob=0.75)),(4*quantile(na.omit(x),prob=0.75)-3*quantile(na.omit(x), prob=0.25)), ((sd(na.omit(x))/sqrt(length(na.omit(x))))), (mean(na.omit(x))+1.96*(sd(na.omit(x))/sqrt(length(na.omit(x))))), (mean(na.omit(x))-1.96*((sd(na.omit(x))/sqrt(length(na.omit(x))))))), scientific = F))}
descriptivas2<-function(Continua,Categorías){
x1=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){length(na.omit(x))})
names(x1)=c("Categoría","Obs")
x2=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){min(na.omit(x))})
names(x2)=c("Categoría","Mínimo")
x3=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){quantile(na.omit(x), prob =0.25)})
names(x3)=c("Categoría","1er Q")
x4=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){median(na.omit(x))})
names(x4)=c("Categoría","Mediana")
x5=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){mean(na.omit(x))})
names(x5)=c("Categoría","Media")
x6=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){quantile(na.omit(x), prob =0.75)})
names(x6)=c("Categoría","3er Q")
x7=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){max(na.omit(x))})
names(x7)=c("Categoría","Máximo")
x8=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){sd(na.omit(x))})
names(x8)=c("Categoría","Desv Est")
x9=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){skewness(na.omit(x))})
names(x9)=c("Categoría","Asimetría")
x10=aggregate.data.frame(Continua, by=list(Categorías), FUN=function(x){kurtosis(na.omit(x))})
names(x10)=c("Categoría","Curtosis")
cbind(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10)[,-seq(3,19,2)]
}
tabla_freq<- function(x,total=1,na="ifany"){
if (total==1) {
M=data.frame("Categoría"=table(x, useNA = na), "Rel"=prop.table(table(x,useNA = na)))[,-3]
names(M)=c("Categoría","Freq. Abs.","Freq. Rel.")
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",sum(M$`Freq. Abs.`),sum(M$`Freq. Rel.`))
M$`Freq. Rel.`=as.numeric(M$`Freq. Rel.`)
M$`Freq. Abs.`=as.numeric(M$`Freq. Abs.`)
M
} else{
M=data.frame("Categoría"=table(x, useNA = na), "Rel"=prop.table(table(x,useNA = na)))[,-3]
names(M)=c("Categoría","Freq. Abs.","Freq. Rel.")
M
}
}
tabla_freq2<-function(x,y,na="ifany",prop=0, suma=c("filas","col")){
if (prop==0) {
M=as.data.frame.matrix(table(x, y, useNA = na))
M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
M
} else if (prop==1 & suma=="filas") {
M=as.data.frame.matrix(table(x, y, useNA = na))
M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
for (i in 2:ncol(M)) {
M[,i]=M[,i]/M[,ncol(M)]
}
M
} else {
M=as.data.frame.matrix(table(x, y, useNA = na))
M$Categoría=row.names(M)
rownames(M)=NULL
M=M[,c(ncol(M),1:ncol(M)-1)]
M$Categoría=as.character(M$Categoría)
M[nrow(M)+1,]=c("Total",colSums(M[,2:ncol(M)]))
M[,2:ncol(M)]=sapply(M[,2:ncol(M)], as.numeric)
M$Total=rowSums(M[,2:ncol(M)])
for (i in 1:nrow(M)) {
M[i,2:ncol(M)]=M[i,2:ncol(M)]/M[nrow(M),2:ncol(M)]
}
M
}
}
merc <- mtcars %>%
filter(str_detect(model, "Merc"))
library(dplyr)
merc <- mtcars %>%
filter(str_detect(model, "Merc"))
library(dplyr)
merc <- mtcars %>%
filter(str_detect(model, "Merc"))
library(stringr)
merc <- mtcars %>%
filter(str_detect(model, "Merc"))
mtcars
merc <- mtcars %>%
filter(str_detect(model, "Merc"))
summary(mtcars)
mtcars
merc <- mtcars %>%
filter(str_detect(model, "Merc"))
merc <- mtcars %>%
filter(str_detect(mtcars$model, "Merc"))
merc <- mtcars %>%
filter(str_detect(mtcars$model, "Merc"))
merc
merc <- mtcars %>%
filter(str_detect(model, "Merc"))
merc <- mtcars %>%
filter(str_detect(model, "Merc"))
mtcars <- mtcars
merc <- mtcars %>%
filter(str_detect(model, "Merc"))
View(mtcars)
merc <- mtcars %>%
filter(str_detect(mtcars[1], "Merc"))
View(mtcars)
View(mtcars)
View(mtcars)
View(mtcars)
df = load("GOLFdata.RData")
data
data <- total08[3:11]
row.names(data) <- total08$Player
data
R1 <- lm(EARN ~ ., total08)
summary(R1)
data.2008 <- total08[3:11]
row.names(data.2008) <- total08$Player
R1 <- lm(EARN ~ ., total08.2008)
summary(R1)
summary(R1)
data.2008 <- total08[3:11]
row.names(data.2008) <- total08$Player
R1 <- lm(EARN ~ ., total08.2008)
R1 <- lm(EARN ~ ., data.2008)
summary(R1)
R2 <- lm(EARN ~ SCORE + DRIVEACC + PUTT, total08)
summary(R2)
summary(R2)
R2 <- lm(EARN ~ SCORE + DRIVEACC + PUTT, total08)
summary(R2)
R2 <- lm(EARN ~ SCORE + DRIVEACC + PUTT, data.2008)
summary(R2)
resid <- residuals(R2)
resid(which.max())
resid(which.max(resid))
resid(which(resid == max(resid)))
resid[which(resid == max(resid))]
resid[which.max(resid)]
plot(resid)
resid(grep("Camilo Villegas", names(resid)))
resid[grep("Camilo Villegas", names(resid))]
# Camilo Villegas
Residual para Camilo Villegas
```{r}
resid[grep("Camilo Villegas", names(resid))]
```
R2$fitted.values[which(total08$Player == "Camilo Villegas")]
R2$fitted.values[which(total08$Player == "Camilo Villegas")]
data.2008[which(total08$Player == "Camilo Villegas")]
data.2008[which(total08$Player == "Camilo Villegas"), "Earn"]
data.2008[which(total08$Player == "Camilo Villegas"), "EARN"]
datos_Camilo <- data.2008[which(total08$Player == "Camilo Villegas"), "SCORE", "DRIVEACC", "PUTT"]
datos_Camilo <- data.2008[which(total08$Player == "Camilo Villegas"), C("SCORE", "DRIVEACC", "PUTT")]
datos_Camilo <- data.2008[which(total08$Player == "Camilo Villegas"), c("SCORE", "DRIVEACC", "PUTT")]
datos_Camilo
datos_Camilo$SCORE <- datos_Camilo$SCORE / 1.01
datos_Camilo
predict(R2, datos_Camilo)
cancer_ds <- data_cancer[, -c(9, 13)]
cancer_ds <- na.exclude(cancer_ds)
data_cancer <- read.csv("cancer_reg.csv")
cancer_ds <- data_cancer[, -c(9, 13)]
cancer_ds <- na.exclude(cancer_ds)
data_cancer <- read.csv("cancer_reg.csv")
cancer_ds <- data_cancer[, -c(9, 13)]
cancer_ds <- na.exclude(cancer_ds)
r1 <- lm(TARGET_deathRate ~ ., cancer_ds, na.action = na.exclude)
r3 <- lm(TARGET_deathRate ~ PctHS18_24 + PctSomeCol18_24 + PctBachDeg18_24 + PctHS25_Over + PctBachDeg25_Over + PctEmployed16_Over + PctUnemployed16_Over + PctPrivateCoverage + PctPrivateCoverageAlone + PctEmpPrivCoverage + PctPublicCoverage + PctPublicCoverageAlone + PctWhite + PctBlack + PctAsian + PctOtherRace + PctMarriedHouseholds + BirthRate, cancer_ds, na.action = na.exclude)
data_cancer <- read.csv("cancer_reg.csv")
cancer_ds <- data_cancer[, -c(9, 13)]
cancer_ds <- na.exclude(cancer_ds)
library(knitr)
library(rmdformats)
library(knitr)
## Global options
options(max.print="75")
opts_chunk$set(echo=FALSE,
cache=FALSE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
data_cancer <- read.csv("cancer_reg.csv")
cancer_ds <- data_cancer[, -c(9, 13)]
cancer_ds <- na.exclude(cancer_ds)
r1 <- lm(TARGET_deathRate ~ ., cancer_ds, na.action = na.exclude)
r2 <- lm(TARGET_deathRate ~ avgAnnCount + avgDeathsPerYear + incidenceRate + medIncome + popEst2015 + povertyPercent + studyPerCap + MedianAge + MedianAgeMale + MedianAgeFemale + AvgHouseholdSize + PercentMarried + PctNoHS18_24, cancer_ds, na.action = na.exclude)
r3 <- lm(TARGET_deathRate ~ PctHS18_24 + PctSomeCol18_24 + PctBachDeg18_24 + PctHS25_Over + PctBachDeg25_Over + PctEmployed16_Over + PctUnemployed16_Over + PctPrivateCoverage + PctPrivateCoverageAlone + PctEmpPrivCoverage + PctPublicCoverage + PctPublicCoverageAlone + PctWhite + PctBlack + PctAsian + PctOtherRace + PctMarriedHouseholds + BirthRate, cancer_ds, na.action = na.exclude)
summary(r1)
summary(r2)
summary(r3)
summary(r1)$adj.r.squared
summary(r2)$adj.r.squared
summary(r3)$adj.r.squared
c(AIC(r1, r2, r3))
c(BIC(r1, r2, r3))
anova(r3, r1)
anova(r2, r1)
install.packages("AER")
library(AER)
jtest(r2, r3)
coxtest(r2, r3)
data_cancer <- read.csv("cancer_reg.csv")
cancer_ds <- data_cancer[, -c(9, 13)]
cancer_ds <- na.exclude(cancer_ds)
r1 <- lm(TARGET_deathRate ~ ., cancer_ds, na.action = na.exclude)
r2 <- lm(TARGET_deathRate ~ avgAnnCount + avgDeathsPerYear + incidenceRate + medIncome + popEst2015 + povertyPercent + studyPerCap + MedianAge + MedianAgeMale + MedianAgeFemale + AvgHouseholdSize + PercentMarried + PctNoHS18_24, cancer_ds, na.action = na.exclude)
r3 <- lm(TARGET_deathRate ~ PctHS18_24 + PctSomeCol18_24 + PctBachDeg18_24 + PctHS25_Over + PctBachDeg25_Over + PctEmployed16_Over + PctUnemployed16_Over + PctPrivateCoverage + PctPrivateCoverageAlone + PctEmpPrivCoverage + PctPublicCoverage + PctPublicCoverageAlone + PctWhite + PctBlack + PctAsian + PctOtherRace + PctMarriedHouseholds + BirthRate, cancer_ds, na.action = na.exclude)
install.packages("lib")
library(lib)
install.packages("rmdformats")
install.packages("rmdformats")
library(rmdformats)
library(AER)
setwd("~/git/R/ic/taller 6")
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv('DatosTaller4.csv')
r1 <- lm(ViolentCrimesPerPop ~ racepctblack + pctUrban + PctPopUnderPov + MalePctDivorce + PctWorkMom + PctPersDenseHous + HousVacant + PctHousOccup + NumStreet, data)
e <- resid(res1)
res1 <- lm(ViolentCrimesPerPop ~ racepctblack + pctUrban + PctPopUnderPov + MalePctDivorce + PctWorkMom + PctPersDenseHous + HousVacant + PctHousOccup + NumStreet, data)
e <- resid(res1)
# librerias
library(dplyr)
# librerias
library(dplyr)
data <- read.csv('DatosTaller4.csv')
res1 <- lm(ViolentCrimesPerPop ~ racepctblack + pctUrban + PctPopUnderPov + MalePctDivorce + PctWorkMom + PctPersDenseHous + HousVacant + PctHousOccup + NumStreet, data)
e <- resid(res1)
attach(data)
par(mfrow=c(2,2))
par(mfrow=c(3,3))
plot(MalePctDivorce, e)
attach(data)
par(mfrow=c(3,3))
plot(racepctblack, e)
plot(pctUrban, e)
plot(PctPopUnderPov, e)
plot(MalePctDivorce, e)
plot(PctWorkMom, e)
plot(PctPersDenseHous, e)
plot(HousVacant, e)
plot(PctHousOccup, e)
plot(NumStreet, e)
attach(data)
par(mfrow=c(3,3))
plot(racepctblack, e)
plot(pctUrban, e)
plot(PctPopUnderPov, e)
plot(MalePctDivorce, e)
plot(PctWorkMom, e)
plot(PctPersDenseHous, e)
plot(HousVacant, e)
plot(PctHousOccup, e)
plot(NumStreet, e)
library(lmtest)
bptest(res1, studentize = FALSE)
library(olsrr)
ols_test_breusch_pagan(res1, rhs=TRUE, multiple=TRUE, p.adj='bonferroni')
ols_test_normality(res1)
bptest(res1, studentize = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# librerias
library(dplyr)
data <- read.csv('DatosTaller4.csv')
res1 <- lm(ViolentCrimesPerPop ~ racepctblack + pctUrban + PctPopUnderPov + MalePctDivorce + PctWorkMom + PctPersDenseHous + HousVacant + PctHousOccup + NumStreet, data)
e <- resid(res1)
attach(data)
par(mfrow=c(3,3))
plot(racepctblack, e)
plot(pctUrban, e)
plot(PctPopUnderPov, e)
plot(MalePctDivorce, e)
plot(PctWorkMom, e)
plot(PctPersDenseHous, e)
plot(HousVacant, e)
plot(PctHousOccup, e)
plot(NumStreet, e)
library(lmtest)
bptest(res1, studentize = FALSE)
library(olsrr)
ols_test_breusch_pagan(res1, rhs=TRUE, multiple=TRUE, p.adj='bonferroni')
ols_test_normality(res1)
bptest(res1, studentize = TRUE)
install.packages("sandwich")
install.packages("sandwich")
install.packages(
sandwich")
```
library(sandwich)
coeftest(reg1, vcov = (vcovHC(reg1))
coeftest(res1, vcov = (vcovHC(res1))
library(sandwich)
coeftest(res1, vcov = (vcovHC(res1))
install.packages("sandwich")
install.packages("sandwich")
library(sandwich)
coeftest(res1, vcov = (vcovHC(res1))
coeftest(res1, vcov = (vcovHC(res1, "HC4"))
coeftest(res1, vcov = (vcovHC(res1, "HC4")))
coeftest(reg, vcov = (vcovHC(reg)))
coeftest(res1, vcov = (vcovHC(res1)))
```{r}
coef(res1)
res2 <- lm(ViolentCrimesPerPop ~ racepctblack + pctUrban + PctPopUnderPov + MalePctDivorce + PctWorkMom + PctPersDenseHous + HousVacant + NumStreet)
waldtest(res2, res1, vcov=vcovHC(res1))
